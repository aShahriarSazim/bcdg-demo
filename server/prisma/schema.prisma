// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
    id Int @id @default(autoincrement())
    firstName String
    lastName String
    email String @unique
    address String
    phone String @unique
    password String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    products Product[]

    purchaseHistories PurchaseHistory[]

    rentHistories RentHistory[]
}
model Product{
    id Int @id @default(autoincrement())
    title String
    description String
    price Float
    rent Float
    rentPaymentPeriod String
    views Int
    status Boolean
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    user User @relation(fields: [userId], references: [id])
    userId Int

    categories CategoryProduct[]

    purchaseHistory PurchaseHistory?

    rentHistories RentHistory[]
}
model Category{
    id Int @id @default(autoincrement())
    name String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    products CategoryProduct[]
}

model CategoryProduct{
    product Product @relation(fields: [productId], references: [id])
    productId Int

    category Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    @@id([categoryId, productId])
}


model PurchaseHistory{
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    user User @relation(fields: [userId], references: [id])
    userId Int

    product Product @relation(fields: [productId], references: [id])
    productId Int @unique
}
model RentHistory{
    id Int @id @default(autoincrement())
    from DateTime
    to  DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    user User @relation(fields: [userId], references: [id])
    userId Int

    product Product @relation(fields: [productId], references: [id])
    productId Int
}